services:
  # Base de donn√©es MySQL
  db:
    image: mysql:8.0
    container_name: ci_cd_mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: myapp
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 20s
      retries: 10
      interval: 10s
    command: --default-authentication-plugin=mysql_native_password

  # Interface d'administration MySQL (Adminer)
  adminer:
    image: adminer:latest
    container_name: ci_cd_adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    environment:
      ADMINER_DEFAULT_SERVER: db

  # API Backend Python (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ci_cd_backend
    ports:
      - "4000:4000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
      - ./backend/server.py:/app/server.py
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/"]
      timeout: 10s
      retries: 5
      interval: 30s

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ci_cd_frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    networks:
      - app_network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge
