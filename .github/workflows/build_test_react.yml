name: Build and Test React Application
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch  
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]  # Choisir une seule version de Node.js

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm ci, build and test
        run: |
          npm ci
          npm run build --if-present
          npm test

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: build

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Check version
        run: |
          CURRENT_LOCAL_VERSION=$(node -p "require('./package.json').version")
          CURRENT_VERSION=$(npm view ci-cd-ynov version)
          if [ "$CURRENT_LOCAL_VERSION" != "$CURRENT_VERSION" ]; then
            echo "NEW_VERSION=TRUE" >> $GITHUB_ENV  
          else
            echo "NEW_VERSION=FALSE" >> $GITHUB_ENV
          fi

  publish_npm:
    runs-on: ubuntu-latest
    needs: build_test
    if: needs.build.outputs.NEW_VERSION == 'true'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - run: npm ci

      - run: npm run build-npm

      - name: Publish package to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a page deployment
    permissions:
      pages: write
      id-token: write

    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2