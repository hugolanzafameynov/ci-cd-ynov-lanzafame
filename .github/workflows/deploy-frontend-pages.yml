name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ master ]

# Permissions requises pour GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Éviter les déploiements concurrent
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: true

      - name: Start frontend (React) in background
        run: npm start &
        env:
          CI: true

      - name: Wait for frontend to be ready
        run: |
          n=0
          until [ "$n" -ge 20 ]
          do
            nc -z localhost 3000 && break
            n=$((n+1))
            sleep 3
          done

      - name: Run Cypress e2e tests
        run: npm run cypress:run
        env:
          CI: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          # Variables d'environnement configurables via GitHub Secrets
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'https://ci-cd-ynov-back-lanzafame.vercel.app' }}
          REACT_APP_POSTS_API_URL: ${{ secrets.REACT_APP_POSTS_API_URL || 'https://ci-cd-ynov-node.vercel.app' }
          SECRET_KEY: ${{ secrets.SECRET_KEY || 'secret' }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL || 'loise.fenoll@ynov.com' }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD || 'default-password' }}
          # Variables d'environnement pour le build
          NODE_ENV: production
          PUBLIC_URL: /ci-cd-ynov-lanzafame
          GENERATE_SOURCEMAP: false
          # Ne pas traiter les warnings ESLint comme des erreurs
          CI: false

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Job de déploiement sur GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
